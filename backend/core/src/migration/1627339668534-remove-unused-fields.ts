import {MigrationInterface, QueryRunner} from "typeorm";

export class removeUnusedFields1627339668534 implements MigrationInterface {
    name = 'removeUnusedFields1627339668534'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "units" DROP CONSTRAINT "FK_35571c6bd2a1ff690201d1dff08"`);
        await queryRunner.query(`ALTER TABLE "units" DROP CONSTRAINT "FK_6981f323d01ba8d55190480078d"`);
        await queryRunner.query(`ALTER TABLE "units" DROP CONSTRAINT "FK_ff9559bf9a1daecef4a89bad4a9"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_3f7b2aedbfccd6297923943e311"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_8a93cc462d190d3f1a04fa69156"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_7cedb0a800e3c0af7ede27ab1ec"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_17e861d96c1bde13c1f4c344cb6"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_d54596fd877e83a3126d3953f36"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_42385e47be1780d1491f0c8c1c3"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_ba0026e02ecfe91791aed1a4818"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP CONSTRAINT "FK_1f6fac73d27c81b656cc6100267"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "ami_percentage"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "annual_income_min"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "floor"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "annual_income_max"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "max_occupancy"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "min_occupancy"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "num_bathrooms"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "num_bedrooms"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "number"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "reserved_type"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "sq_feet"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."units_status_enum"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "bmr_program_chart"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "ami_chart_id"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "priority_type_id"`);
        await queryRunner.query(`ALTER TABLE "units" DROP COLUMN "unit_rent_type_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_fee"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_organization"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "building_selection_criteria"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "costs_not_included"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "credit_history"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "criminal_background"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "deposit_min"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "deposit_max"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "disable_units_accordion"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "leasing_agent_email"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "leasing_agent_name"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "leasing_agent_office_hours"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "leasing_agent_phone"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "leasing_agent_title"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "program_rules"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "rental_history"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "required_documents"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "waitlist_current_size"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "waitlist_max_size"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "what_to_expect"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."listings_status_enum"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "rental_assistance"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_pick_up_address_office_hours"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_open_date"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "postmarked_applications_received_by_date"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "display_waitlist_size"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "csv_formatting_type"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "assets"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_methods"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "special_notes"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "county_code"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "jurisdiction_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "reserved_community_min_age"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "reserved_community_type_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "result_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "result_link"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "is_waitlist_open"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "waitlist_open_spots"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_pick_up_address_type"`);
        await queryRunner.query(`DROP TYPE "public"."listings_application_pick_up_address_type_enum"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_drop_off_address_type"`);
        await queryRunner.query(`DROP TYPE "public"."listings_application_drop_off_address_type_enum"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_drop_off_address_office_hours"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "additional_application_submission_notes"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_due_time"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_address_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_pick_up_address_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_drop_off_address_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "application_mailing_address_id"`);
        await queryRunner.query(`ALTER TABLE "listings" DROP COLUMN "leasing_agent_address_id"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "listings" ADD "leasing_agent_address_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_mailing_address_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_drop_off_address_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_pick_up_address_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_address_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_due_time" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "additional_application_submission_notes" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_drop_off_address_office_hours" text`);
        await queryRunner.query(`CREATE TYPE "public"."listings_application_drop_off_address_type_enum" AS ENUM('leasingAgent', 'mailingAddress')`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_drop_off_address_type" "listings_application_drop_off_address_type_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."listings_application_pick_up_address_type_enum" AS ENUM('leasingAgent', 'mailingAddress')`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_pick_up_address_type" "listings_application_pick_up_address_type_enum"`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "waitlist_open_spots" integer`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "is_waitlist_open" boolean`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "result_link" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "result_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "reserved_community_type_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "reserved_community_min_age" integer`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "jurisdiction_id" uuid`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "county_code" character varying NOT NULL DEFAULT 'Alameda'`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "special_notes" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_methods" jsonb NOT NULL`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "assets" jsonb NOT NULL`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "csv_formatting_type" character varying NOT NULL DEFAULT 'basic'`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "display_waitlist_size" boolean NOT NULL`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "postmarked_applications_received_by_date" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_open_date" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_pick_up_address_office_hours" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "rental_assistance" text`);
        await queryRunner.query(`CREATE TYPE "public"."listings_status_enum" AS ENUM('active', 'pending', 'closed')`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "status" "listings_status_enum" NOT NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "what_to_expect" jsonb`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "waitlist_max_size" integer`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "waitlist_current_size" integer`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "required_documents" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "rental_history" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "program_rules" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "leasing_agent_title" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "leasing_agent_phone" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "leasing_agent_office_hours" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "leasing_agent_name" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "leasing_agent_email" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "disable_units_accordion" boolean`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "deposit_max" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "deposit_min" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "criminal_background" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "credit_history" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "costs_not_included" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "building_selection_criteria" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_organization" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD "application_fee" text`);
        await queryRunner.query(`ALTER TABLE "units" ADD "unit_rent_type_id" uuid`);
        await queryRunner.query(`ALTER TABLE "units" ADD "priority_type_id" uuid`);
        await queryRunner.query(`ALTER TABLE "units" ADD "ami_chart_id" uuid`);
        await queryRunner.query(`ALTER TABLE "units" ADD "bmr_program_chart" boolean`);
        await queryRunner.query(`CREATE TYPE "public"."units_status_enum" AS ENUM('unknown', 'available', 'occupied')`);
        await queryRunner.query(`ALTER TABLE "units" ADD "status" "units_status_enum"`);
        await queryRunner.query(`ALTER TABLE "units" ADD "sq_feet" numeric(8,2)`);
        await queryRunner.query(`ALTER TABLE "units" ADD "reserved_type" text`);
        await queryRunner.query(`ALTER TABLE "units" ADD "number" text`);
        await queryRunner.query(`ALTER TABLE "units" ADD "num_bedrooms" integer`);
        await queryRunner.query(`ALTER TABLE "units" ADD "num_bathrooms" integer`);
        await queryRunner.query(`ALTER TABLE "units" ADD "min_occupancy" integer`);
        await queryRunner.query(`ALTER TABLE "units" ADD "max_occupancy" integer`);
        await queryRunner.query(`ALTER TABLE "units" ADD "annual_income_max" text`);
        await queryRunner.query(`ALTER TABLE "units" ADD "floor" integer`);
        await queryRunner.query(`ALTER TABLE "units" ADD "annual_income_min" text`);
        await queryRunner.query(`ALTER TABLE "units" ADD "ami_percentage" text`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_1f6fac73d27c81b656cc6100267" FOREIGN KEY ("reserved_community_type_id") REFERENCES "reserved_community_types"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_ba0026e02ecfe91791aed1a4818" FOREIGN KEY ("jurisdiction_id") REFERENCES "jurisdictions"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_42385e47be1780d1491f0c8c1c3" FOREIGN KEY ("application_address_id") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_d54596fd877e83a3126d3953f36" FOREIGN KEY ("application_pick_up_address_id") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_17e861d96c1bde13c1f4c344cb6" FOREIGN KEY ("application_drop_off_address_id") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_7cedb0a800e3c0af7ede27ab1ec" FOREIGN KEY ("application_mailing_address_id") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_8a93cc462d190d3f1a04fa69156" FOREIGN KEY ("leasing_agent_address_id") REFERENCES "address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "listings" ADD CONSTRAINT "FK_3f7b2aedbfccd6297923943e311" FOREIGN KEY ("result_id") REFERENCES "assets"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "units" ADD CONSTRAINT "FK_ff9559bf9a1daecef4a89bad4a9" FOREIGN KEY ("unit_rent_type_id") REFERENCES "unit_rent_types"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "units" ADD CONSTRAINT "FK_6981f323d01ba8d55190480078d" FOREIGN KEY ("priority_type_id") REFERENCES "unit_accessibility_priority_types"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "units" ADD CONSTRAINT "FK_35571c6bd2a1ff690201d1dff08" FOREIGN KEY ("ami_chart_id") REFERENCES "ami_chart"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
